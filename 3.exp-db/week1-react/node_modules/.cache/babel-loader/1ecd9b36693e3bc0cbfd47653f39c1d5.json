{"ast":null,"code":"import _regeneratorRuntime from \"/home/mehmet/Desktop/HackYourFuture/housePrices/3.exp-db/week1-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mehmet/Desktop/HackYourFuture/housePrices/3.exp-db/week1-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"/home/mehmet/Desktop/HackYourFuture/housePrices/3.exp-db/week1-react/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/home/mehmet/Desktop/HackYourFuture/housePrices/3.exp-db/week1-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mehmet/Desktop/HackYourFuture/housePrices/3.exp-db/week1-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"/home/mehmet/Desktop/HackYourFuture/housePrices/3.exp-db/week1-react/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/mehmet/Desktop/HackYourFuture/housePrices/3.exp-db/week1-react/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2;\n\nimport { configure, observable, action, runInAction } from 'mobx'; // import axios from \"axios\";\n\nconfigure({\n  enforceActions: 'observed'\n});\nvar houseApp = (_class =\n/*#__PURE__*/\nfunction () {\n  function houseApp() {\n    _classCallCheck(this, houseApp);\n\n    _initializerDefineProperty(this, \"output\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"addNewTodo\", _descriptor2, this);\n  }\n\n  _createClass(houseApp, [{\n    key: \"listHouses\",\n    value: function () {\n      var _listHouses = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.output.houses = [];\n                this.output.status = 'loading';\n                _context.prev = 2;\n                _context.next = 5;\n                return this.getItems();\n\n              case 5:\n                data = _context.sent;\n                runInAction(function () {\n                  _this.output.houses = data.results;\n                  _this.output.status = 'done';\n                });\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                runInAction(function () {\n                  _this.output.status = 'error';\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      return function listHouses() {\n        return _listHouses.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      return fetch('/houses').then(function (response) {\n        return response.json();\n      });\n    }\n  }, {\n    key: \"createNewItem\",\n    value: function createNewItem(item) {\n      return fetch('/houses/create', {\n        method: 'POST',\n        body: JSON.stringify(item),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      }).then(function (response) {\n        return response.json();\n      });\n    }\n  }]);\n\n  return houseApp;\n}(), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"output\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return {\n      houses: [],\n      status: 'loading'\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"listHouses\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"listHouses\"), _class.prototype), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"addNewTodo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (newEntry) {\n      var newEntryJSON = JSON.parse(newEntry);\n      console.log(newEntryJSON);\n      console.log(typeof newEntryJSON);\n      console.log(\"It is an array => \" + Array.isArray(newEntryJSON));\n      console.log(newEntryJSON[0]); // if(newEntry.description === '' || !dateRegExp.test(newEntry.deadline)) {\n      //     this.wrongInput = true\n      // } else {\n\n      _this2.output.status = 'loading';\n\n      _this2.createNewItem(newEntryJSON).then(function () {\n        runInAction(function () {\n          _this2.output.houses.push(newEntryJSON);\n\n          _this2.output.status = 'done';\n        });\n      }).catch(function (error) {\n        runInAction(function () {\n          _this2.output.status = 'error';\n        });\n      }); // }\n\n    };\n  }\n})), _class);\nvar myHouseApp = new houseApp();\nexport default myHouseApp;","map":{"version":3,"sources":["/home/mehmet/Desktop/HackYourFuture/housePrices/3.exp-db/week1-react/src/store/houseApp.js"],"names":["configure","observable","action","runInAction","enforceActions","houseApp","output","houses","status","getItems","data","results","fetch","then","response","json","item","method","body","JSON","stringify","headers","newEntry","newEntryJSON","parse","console","log","Array","isArray","createNewItem","push","catch","error","myHouseApp"],"mappings":";;;;;;;;;;AAAA,SAAQA,SAAR,EAAmBC,UAAnB,EAA+BC,MAA/B,EAAuCC,WAAvC,QAAyD,MAAzD,C,CACA;;AAEAH,SAAS,CAAC;AAACI,EAAAA,cAAc,EAAE;AAAjB,CAAD,CAAT;IAEMC,Q;;;;;;;;;;;;;;;;;;;;;;;;AAQE,qBAAKC,MAAL,CAAYC,MAAZ,GAAqB,EAArB;AACA,qBAAKD,MAAL,CAAYE,MAAZ,GAAqB,SAArB;;;uBAEuB,KAAKC,QAAL,E;;;AAAbC,gBAAAA,I;AACNP,gBAAAA,WAAW,CAAC,YAAM;AACd,kBAAA,KAAI,CAACG,MAAL,CAAYC,MAAZ,GAAqBG,IAAI,CAACC,OAA1B;AACA,kBAAA,KAAI,CAACL,MAAL,CAAYE,MAAZ,GAAqB,MAArB;AACH,iBAHU,CAAX;;;;;;;AAMAL,gBAAAA,WAAW,CAAC,YAAM;AACd,kBAAA,KAAI,CAACG,MAAL,CAAYE,MAAZ,GAAqB,OAArB;AACH,iBAFU,CAAX;;;;;;;;;;;;;;;;+BAMG;AACP,aAAOI,KAAK,CAAC,SAAD,CAAL,CACFC,IADE,CACG,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADX,CAAP;AAEH;;;kCA2BaC,I,EAAM;AAChB,aAAOJ,KAAK,CAAC,gBAAD,EAAmB;AAC3BK,QAAAA,MAAM,EAAE,MADmB;AAE3BC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFqB;AAG3BK,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHkB,OAAnB,CAAL,CAOJR,IAPI,CAOC,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAPT,CAAP;AAQH;;;;2EA7DAd,U;;;;;WAAoB;AACjBM,MAAAA,MAAM,EAAG,EADQ;AAEjBC,MAAAA,MAAM,EAAG;AAFQ,K;;+DAKpBN,M,iKAsBAA,M;;;;;;;WAAoB,UAACoB,QAAD,EAAc;AAC/B,UAAMC,YAAY,GAAGJ,IAAI,CAACK,KAAL,CAAWF,QAAX,CAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,YAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBC,KAAK,CAACC,OAAN,CAAcL,YAAd,CAAnC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAAC,CAAD,CAAxB,EAL+B,CAO/B;AACA;AACA;;AACI,MAAA,MAAI,CAACjB,MAAL,CAAYE,MAAZ,GAAqB,SAArB;;AACA,MAAA,MAAI,CAACqB,aAAL,CAAmBN,YAAnB,EAAiCV,IAAjC,CAAsC,YAAI;AACtCV,QAAAA,WAAW,CAAC,YAAM;AACd,UAAA,MAAI,CAACG,MAAL,CAAYC,MAAZ,CAAmBuB,IAAnB,CAAwBP,YAAxB;;AACA,UAAA,MAAI,CAACjB,MAAL,CAAYE,MAAZ,GAAqB,MAArB;AACH,SAHU,CAAX;AAIH,OALD,EAMCuB,KAND,CAMO,UAACC,KAAD,EAAW;AACd7B,QAAAA,WAAW,CAAC,YAAM;AACd,UAAA,MAAI,CAACG,MAAL,CAAYE,MAAZ,GAAqB,OAArB;AACH,SAFU,CAAX;AAGH,OAVD,EAX2B,CAsB/B;;AACH,K;;;AAcL,IAAMyB,UAAU,GAAG,IAAI5B,QAAJ,EAAnB;AAEA,eAAe4B,UAAf","sourcesContent":["import {configure, observable, action, runInAction} from 'mobx';\n// import axios from \"axios\";\n\nconfigure({enforceActions: 'observed'});\n\nclass houseApp {\n\n    @observable output = {\n        houses : [],\n        status : 'loading'\n    }\n\n    @action async listHouses() {\n        this.output.houses = [];\n        this.output.status = 'loading';\n        try {\n            const data = await this.getItems();\n            runInAction(() => {\n                this.output.houses = data.results;\n                this.output.status = 'done';\n            })\n        }\n        catch(error) {\n            runInAction(() => {\n                this.output.status = 'error';\n            }) \n        }\n    }\n\n    getItems() {\n        return fetch('/houses')\n            .then(response => response.json())\n    }\n\n    @action addNewTodo = (newEntry) => {\n        const newEntryJSON = JSON.parse(newEntry)\n        console.log(newEntryJSON);\n        console.log(typeof newEntryJSON);\n        console.log(\"It is an array => \" + Array.isArray(newEntryJSON));\n        console.log(newEntryJSON[0])\n    \n        // if(newEntry.description === '' || !dateRegExp.test(newEntry.deadline)) {\n        //     this.wrongInput = true\n        // } else {\n            this.output.status = 'loading';\n            this.createNewItem(newEntryJSON).then(()=>{\n                runInAction(() => {\n                    this.output.houses.push(newEntryJSON);\n                    this.output.status = 'done';\n                })\n            })\n            .catch((error) => {\n                runInAction(() => {\n                    this.output.status = 'error';\n                }) \n            })\n        // }\n    }\n\n    createNewItem(item) {\n        return fetch('/houses/create', {\n            method: 'POST',\n            body: JSON.stringify(item),\n            headers: {\n              \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n          })\n          .then(response => response.json())\n    }\n}\n\nconst myHouseApp = new houseApp();\n\nexport default myHouseApp;"]},"metadata":{},"sourceType":"module"}