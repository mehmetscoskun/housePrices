{"ast":null,"code":"import _classCallCheck from \"/home/mehmet/Desktop/HackYourFuture/React/homework-submission/week1-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mehmet/Desktop/HackYourFuture/React/homework-submission/week1-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mehmet/Desktop/HackYourFuture/React/homework-submission/week1-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mehmet/Desktop/HackYourFuture/React/homework-submission/week1-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mehmet/Desktop/HackYourFuture/React/homework-submission/week1-react/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/mehmet/Desktop/HackYourFuture/React/homework-submission/week1-react/src/App.js\";\n\nimport React, { Component } from 'react';\nimport todoLogo from './todo.png';\nimport './App.css';\nimport { inject, observer } from 'mobx-react';\nimport Todo from \"./component/todo.js\";\nimport Add from \"./component/add\";\nimport Update from \"./component/update\";\nvar App = (_dec = inject('myTodoApp'), _dec(_class = observer(_class =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // state = {\n    //   data: data,\n    //   indexToUpdate: -1,\n    //   wrongInput : false\n    // };\n    // changeDone = (index) => {\n    //   const newData = this.state.data.map(item => {\n    //     if(item.id === index+1) {\n    //       return {...item, done: !item.done}\n    //     }\n    //     return item\n    //   });\n    //   this.setState({\n    //     data: newData,\n    //   });\n    // }\n    // addNewTodo = (newEntry) => {\n    //   const dateRegExp = /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/;\n    //   if(newEntry.description === '' || !dateRegExp.test(newEntry.deadline)) {\n    //     this.setState({wrongInput: true})\n    //   } else {\n    //     const newData = this.state.data.map(item => {return {...item}});\n    //     newEntry.id = this.state.data.length;\n    //     newData.push(newEntry)\n    //     this.setState({\n    //       data: newData,\n    //       wrongInput: false\n    //     })\n    //   }\n    // }\n    // deleteTodo = (index) => {\n    //   const newData = this.state.data.map(item => {return {...item}});\n    //   newData.splice(index, 1);\n    //   this.setState({\n    //     data: newData,\n    //   })\n    // }\n    // editButton = (index) => {\n    //   this.setState({\n    //     indexToUpdate: index\n    //   })\n    // }\n    // updateTodo = (select, index, newEntry) => {\n    //   if(select === 'cancel') {\n    //     this.setState({\n    //       indexToUpdate: -1\n    //     })\n    //   } else {\n    //     const newData = this.state.data.map(item => {\n    //       if(item.id === index+1) {\n    //         return {...item, description: newEntry.description, deadline: newEntry.deadline}\n    //       }\n    //       return item\n    //     });\n    //     this.setState({\n    //       data: newData,\n    //       indexToUpdate: -1\n    //     })\n    //   }\n    // }\n    value: function render() {\n      var _this = this;\n\n      var myTodoApp = this.props.myTodoApp;\n      var isEmpty = myTodoApp.data.todos.length < 1 || myTodoApp.data.todos === undefined;\n      var todoList = myTodoApp.data.todos.map(function (item, key) {\n        return key === myTodoApp.data.indexToUpdate ? React.createElement(Update, {\n          text: item.description,\n          date: item.deadline,\n          index: key,\n          key: key,\n          updateTodo: _this.updateTodo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }) : React.createElement(Todo, {\n          key: key,\n          index: key,\n          changeDone: myTodoApp.changeDone,\n          deleteTodo: myTodoApp.deleteTodo,\n          editButton: _this.editButton,\n          id: item.id,\n          text: item.description,\n          date: item.deadline,\n          done: item.done,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        });\n      });\n      var elements = isEmpty ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"No items...\") : todoList;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: todoLogo,\n        className: \"todo-logo\",\n        alt: \"todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"My Todo List\"), React.createElement(Add, {\n        addNewTodo: myTodoApp.addNewTodo,\n        wrongInput: myTodoApp.data.wrongInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, elements)));\n    }\n  }]);\n\n  return App;\n}(Component)) || _class) || _class);\nexport default App;","map":{"version":3,"sources":["/home/mehmet/Desktop/HackYourFuture/React/homework-submission/week1-react/src/App.js"],"names":["React","Component","todoLogo","inject","observer","Todo","Add","Update","App","myTodoApp","props","isEmpty","data","todos","length","undefined","todoList","map","item","key","indexToUpdate","description","deadline","updateTodo","changeDone","deleteTodo","editButton","id","done","elements","addNewTodo","wrongInput"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,QAAhB,QAA+B,YAA/B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;IAKMC,G,WAHLL,MAAM,CAAC,WAAD,C,gBACNC,Q;;;;;;;;;;;;;AAIC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;6BAES;AAAA;;AAAA,UACAK,SADA,GACa,KAAKC,KADlB,CACAD,SADA;AAGP,UAAME,OAAO,GAAGF,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqBC,MAArB,GAA8B,CAA9B,IAAmCL,SAAS,CAACG,IAAV,CAAeC,KAAf,KAAyBE,SAA5E;AAEA,UAAMC,QAAQ,GAAGP,SAAS,CAACG,IAAV,CAAeC,KAAf,CAAqBI,GAArB,CAAyB,UAACC,IAAD,EAAOC,GAAP;AAAA,eACzCA,GAAG,KAAKV,SAAS,CAACG,IAAV,CAAeQ,aAAxB,GACA,oBAAC,MAAD;AACA,UAAA,IAAI,EAAEF,IAAI,CAACG,WADX;AAEA,UAAA,IAAI,EAAEH,IAAI,CAACI,QAFX;AAGA,UAAA,KAAK,EAAEH,GAHP;AAIA,UAAA,GAAG,EAAEA,GAJL;AAKA,UAAA,UAAU,EAAE,KAAI,CAACI,UALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,GASA,oBAAC,IAAD;AACA,UAAA,GAAG,EAAEJ,GADL;AAEA,UAAA,KAAK,EAAEA,GAFP;AAGA,UAAA,UAAU,EAAIV,SAAS,CAACe,UAHxB;AAIA,UAAA,UAAU,EAAIf,SAAS,CAACgB,UAJxB;AAKA,UAAA,UAAU,EAAE,KAAI,CAACC,UALjB;AAMA,UAAA,EAAE,EAAER,IAAI,CAACS,EANT;AAOA,UAAA,IAAI,EAAET,IAAI,CAACG,WAPX;AAQA,UAAA,IAAI,EAAEH,IAAI,CAACI,QARX;AASA,UAAA,IAAI,EAAEJ,IAAI,CAACU,IATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAV0C;AAAA,OAAzB,CAAjB;AAsBA,UAAMC,QAAQ,GAAIlB,OAAD,GAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAZ,GAAiCK,QAAlD;AAEA,aAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,GAAG,EAAEd,QAAV;AAAoB,QAAA,SAAS,EAAC,WAA9B;AAA0C,QAAA,GAAG,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAME,oBAAC,GAAD;AACE,QAAA,UAAU,EAAIO,SAAS,CAACqB,UAD1B;AAEE,QAAA,UAAU,EAAIrB,SAAS,CAACG,IAAV,CAAemB,UAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,QADH,CAXF,CADF,CAFF;AAqBD;;;;EA5He5B,S;AA+HlB,eAAeO,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport todoLogo from './todo.png';\nimport './App.css';\nimport {inject, observer} from 'mobx-react';\nimport Todo from \"./component/todo.js\";\nimport Add from \"./component/add\";\nimport Update from \"./component/update\";\n\n@inject('myTodoApp')\n@observer\n\nclass App extends Component {\n\n  // state = {\n  //   data: data,\n  //   indexToUpdate: -1,\n  //   wrongInput : false\n  // };\n\n  // changeDone = (index) => {\n  //   const newData = this.state.data.map(item => {\n  //     if(item.id === index+1) {\n  //       return {...item, done: !item.done}\n  //     }\n  //     return item\n  //   });\n\n  //   this.setState({\n  //     data: newData,\n  //   });\n  // }\n\n  // addNewTodo = (newEntry) => {\n  //   const dateRegExp = /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/;\n\n  //   if(newEntry.description === '' || !dateRegExp.test(newEntry.deadline)) {\n  //     this.setState({wrongInput: true})\n  //   } else {\n\n  //     const newData = this.state.data.map(item => {return {...item}});\n  //     newEntry.id = this.state.data.length;\n  //     newData.push(newEntry)\n  //     this.setState({\n  //       data: newData,\n  //       wrongInput: false\n  //     })\n  //   }\n  // }\n\n  // deleteTodo = (index) => {\n  //   const newData = this.state.data.map(item => {return {...item}});\n\n  //   newData.splice(index, 1);\n\n  //   this.setState({\n  //     data: newData,\n  //   })\n  // }\n \n  // editButton = (index) => {\n  //   this.setState({\n  //     indexToUpdate: index\n  //   })\n  // }\n\n  // updateTodo = (select, index, newEntry) => {\n  //   if(select === 'cancel') {\n  //     this.setState({\n  //       indexToUpdate: -1\n  //     })\n  //   } else {\n  //     const newData = this.state.data.map(item => {\n  //       if(item.id === index+1) {\n  //         return {...item, description: newEntry.description, deadline: newEntry.deadline}\n  //       }\n  //       return item\n  //     });\n\n  //     this.setState({\n  //       data: newData,\n  //       indexToUpdate: -1\n  //     })\n  //   }\n  // }\n\n  render() {\n    const {myTodoApp} = this.props;\n\n    const isEmpty = myTodoApp.data.todos.length < 1 || myTodoApp.data.todos === undefined;\n\n    const todoList = myTodoApp.data.todos.map((item, key)=> \n    (key === myTodoApp.data.indexToUpdate) ?\n    <Update\n    text={item.description}\n    date={item.deadline}\n    index={key}\n    key={key}\n    updateTodo={this.updateTodo}\n    />\n    :\n    <Todo\n    key={key}\n    index={key}\n    changeDone = {myTodoApp.changeDone}\n    deleteTodo = {myTodoApp.deleteTodo}\n    editButton={this.editButton}\n    id={item.id}\n    text={item.description}\n    date={item.deadline}\n    done={item.done}\n    />)\n\n    const elements = (isEmpty) ? <p>No items...</p> : todoList;\n      \n    return (\n      \n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          <img src={todoLogo} className=\"todo-logo\" alt=\"todo\" />\n\n          <h1>My Todo List</h1>\n\n          <Add\n            addNewTodo = {myTodoApp.addNewTodo}\n            wrongInput = {myTodoApp.data.wrongInput}\n          />\n\n          <ul>\n            {elements}\n          </ul>\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}